How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    By pointing the line where it was the error I was able to read just the line
    containing such error

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Having access to the history of a file will help us to see where certain change
    was made in the timeline or when an error would origin.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    When doing the manually commit you get to choose when would be a understandable
    point in the work to realize a checkpoint. Instead if it were automatically
    there would be an amount of commits that we don't know why they were made for.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    To compare the changes that could affect on other files.

How can you use the commands git log and git diff to view the history of files?

    To search for a specific change on certain file. And compare where could have
    been done a change or an error.

How might using version control make you more confident to make changes that
could break something?

    When trying a new code I would test it and try to work it around and if an
    error occurs i could easily return to the previous state where I din't make
    any changes.

Now that you have your workspace set up, what do you want to try using Git for?
    I've installed zsh following a tutorial that I found in CSS-Tricks, I added a
    nice theme that sets colors for the prompt and indicates the branch and if there
    are changes in the repository. I would like to try to change css configuration
    in a complex website.
